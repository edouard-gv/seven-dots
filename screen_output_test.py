from dots_controller import Display
from screen_output import MockSerialPort, convert


def send_prefix(port):
    port.write(0x80)
    port.write(0x83)
    port.write(0x00)


def send_close(port):
    port.write(0x8F)


def send_bytes(port, *frame_bytes):
    for byte in frame_bytes:
        port.write(byte)


def test_transpose():
    byte_line = [0b1111111, 0b1111111, 0x00, 0x00, 0x00, 0x00, 0x00]
    converted_lines_to_transpose = [convert(b) for b in byte_line]
    converted_lines = [list(x) for x in list(zip(*converted_lines_to_transpose))]
    lines = [" ".join(line) for line in converted_lines]
    assert "\n".join(lines).replace(" ", ".") == \
           ('._..._.....................\n'
            '|_|.|_|....................\n'
            '|_|.|_|....................')


def test_noprint_digit():
    port = MockSerialPort()
    send_prefix(port)
    send_close(port)
    assert '\n' + port.output.replace(" ", ".") == \
           """
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
"""


def test_oneprint_digit():
    port = MockSerialPort()
    send_prefix(port)
    send_bytes(port, 0b1111111)
    send_close(port)
    print(port.output.replace(" ", "."))

    assert port.output.replace(" ", ".") == \
           """\
._.........................
|_|........................
|_|........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
"""


def test_two_print_digit_integrating_display():
    port = MockSerialPort()
    display = Display(port)
    display_array = [[0 for j in range(7)] for i in range(4)]
    display_array[0][0] = 0b1111111
    display_array[0][1] = 0b1111111
    display.update_display(display_array)

    assert port.output.replace(" ", ".") == \
           """\
._..._.....................
|_|.|_|....................
|_|.|_|....................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
"""

def test_two_print_digit():
    port = MockSerialPort()
    send_prefix(port)
    send_bytes(port, 0b1111111, 0b1111111)
    send_close(port)
    print(port.output.replace(" ", "."))

    assert port.output.replace(" ", ".") == \
           """\
._..._.....................
|_|.|_|....................
|_|.|_|....................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
"""


def test_three_print_digit():
    port = MockSerialPort()
    send_prefix(port)
    send_bytes(port, 0b1111111, 0b1111111, 0x00, 0x00, 0x00, 0x00, 0x00)
    send_bytes(port, 0b1111111)
    send_close(port)
    print(port.output.replace(" ", "."))

    assert port.output.replace(" ", ".") == \
           """\
._..._.....................
|_|.|_|....................
|_|.|_|....................
...........................
._.........................
|_|........................
|_|........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
"""


def test_full_line_print_digit():
    port = MockSerialPort()
    send_prefix(port)
    for _ in range(7):
        send_bytes(port, 0b1111111)
    send_close(port)
    print(port.output.replace(" ", "."))

    assert port.output.replace(" ", ".") == \
           """\
._..._..._..._..._..._..._.
|_|.|_|.|_|.|_|.|_|.|_|.|_|
|_|.|_|.|_|.|_|.|_|.|_|.|_|
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
...........................
"""


def test_convert_first_segment():
    assert convert(0b0000001) == [
        '   ',
        ' _ ',
        '   ']


def test_convert_first_and_second_segments():
    assert convert(0b0000011) == [
        '   ',
        '|_ ',
        '   ']


def test_for_fun():
    port = MockSerialPort()
    send_prefix(port)
    for i in range(28):
        send_bytes(port, i)
    send_close(port)
    print(port.output.replace(" ", " "))
    assert port.output.replace(" ", " ") == """\
                           
     _  |   |_       _  |  
                |   |   |  
                           
                           
|_       _  |   |_       _ 
|    _   _   _   _  |_  |_ 
                           
                           
|   |_       _  |   |_     
|_  |_    |   |   |   | | |
                           
                           
 _  |   |_       _  |   |_ 
| | | | | |  _|  _|  _|  _|
"""
